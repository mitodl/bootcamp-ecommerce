{
  "addons": [
    "heroku-postgresql:hobby-dev",
    "newrelic:wayne",
    "rediscloud:30"
  ],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    }
  ],
  "description": "MIT Bootcamp e-commerce",
  "env": {
    "ADWORDS_CONVERSION_ID": {
      "description": "Id for adwords conversion",
      "required": false
    },
    "ALLOWED_HOSTS": {
      "description": "Allowed hosts to addres DNS rebinding vulnerability",
      "required": false
    },
    "AUTH_CHANGE_EMAIL_TTL_IN_MINUTES": {
      "description": "Expiry time for a change email request, default is 1440 minutes(1 day)",
      "required": false
    },
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "BOOTCAMP_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to",
      "required": false
    },
    "BOOTCAMP_DB_CONN_MAX_AGE": {
      "description": "The maximum age of database connections",
      "required": true
    },
    "BOOTCAMP_DB_DISABLE_SSL": {
      "description": "Disables SSL to postgres if set to True",
      "required": false
    },
    "BOOTCAMP_ECOMMERCE_BASE_URL": {
      "description": "The base url of this application to be used in emails",
      "required": true
    },
    "BOOTCAMP_ECOMMERCE_EMAIL": {
      "description": "Email to send ecommerce alerts to",
      "required": false
    },
    "BOOTCAMP_EMAIL_BACKEND": {
      "description": "The backend for email sending",
      "required": false
    },
    "BOOTCAMP_EMAIL_HOST": {
      "description": "Outgoing e-mail host",
      "required": false
    },
    "BOOTCAMP_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail password",
      "required": false
    },
    "BOOTCAMP_EMAIL_PORT": {
      "description": "Outgoing e-mail port",
      "required": false
    },
    "BOOTCAMP_EMAIL_TLS": {
      "description": "Outgoing e-mail enable TLS",
      "required": false
    },
    "BOOTCAMP_EMAIL_USER": {
      "description": "Outgoing e-mail user",
      "required": false
    },
    "BOOTCAMP_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)",
      "required": false
    },
    "BOOTCAMP_FROM_EMAIL": {
      "description": "Default FROM email address",
      "required": false
    },
    "BOOTCAMP_LOG_LEVEL": {
      "description": "The logging level for the application",
      "required": false
    },
    "BOOTCAMP_NOTIFICATION_EMAIL_BACKEND": {
      "description": "The email backend for notifications",
      "required": false
    },
    "BOOTCAMP_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "BOOTCAMP_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting",
      "required": false
    },
    "BOOTCAMP_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support",
      "required": false
    },
    "BOOTCAMP_SUPPORT_URL": {
      "description": "URL for customer support",
      "required": false
    },
    "BOOTCAMP_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "required": false
    },
    "CELERY_BROKER_URL": {
      "description": "Where celery should get tasks, default is Redis URL",
      "required": false
    },
    "CELERY_RESULT_BACKEND": {
      "description": "Where celery should put task results, default is Redis URL",
      "required": false
    },
    "CLOUDFRONT_DIST": {
      "description": "The cloudfront distribution for the app",
      "required": false
    },
    "CYBERSOURCE_ACCESS_KEY": {
      "description": "CyberSource Access Key",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_OPERATOR": {
      "description": "Whether just the name or the name and address should be used in exports verification. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_WEIGHT": {
      "description": "The weight of the address in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_NAME_WEIGHT": {
      "description": "The weight of the name in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_SANCTIONS_LISTS": {
      "description": "Additional sanctions lists to validate for exports. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_INQUIRY_LOG_NACL_ENCRYPTION_KEY": {
      "description": "The public key to encrypt export results with for our own security purposes. Should be a base64 encoded NaCl public key.",
      "required": false
    },
    "CYBERSOURCE_MERCHANT_ID": {
      "description": "The cybersource merchant id",
      "required": false
    },
    "CYBERSOURCE_PROFILE_ID": {
      "description": "CyberSource Profile ID",
      "required": false
    },
    "CYBERSOURCE_REFERENCE_PREFIX": {
      "description": "a string prefix to identify the application in CyberSource transactions",
      "required": false
    },
    "CYBERSOURCE_SECURE_ACCEPTANCE_URL": {
      "description": "CyberSource API endpoint",
      "required": false
    },
    "CYBERSOURCE_SECURITY_KEY": {
      "description": "CyberSource API key",
      "required": false
    },
    "CYBERSOURCE_TRANSACTION_KEY": {
      "description": "The cybersource transaction key",
      "required": false
    },
    "CYBERSOURCE_WSDL_URL": {
      "description": "The URL to the cybersource WSDL",
      "required": false
    },
    "DJANGO_LOG_LEVEL": {
      "description": "The log level for Django",
      "required": false
    },
    "EDXORG_BASE_URL": {
      "description": "The base URL of the edX instance to use for logging in.",
      "required": true
    },
    "EDXORG_CLIENT_ID": {
      "description": "The OAuth client ID configured in the edX instance",
      "required": true
    },
    "EDXORG_CLIENT_SECRET": {
      "description": "The OAuth client secret configured in the edX instance",
      "required": true
    },
    "ES_LOG_LEVEL": {
      "description": "The log level for elasticsearch",
      "required": false
    },
    "GA_TRACKING_ID": {
      "description": "Google Analytics tracking ID",
      "required": false
    },
    "GTM_TRACKING_ID": {
      "description": "Google Tag Manager tracking ID",
      "required": false
    },
    "HUBSPOT_API_KEY": {
      "description": "API key for Hubspot",
      "required": false
    },
    "HUBSPOT_CREATE_USER_FORM_ID": {
      "description": "Form ID for Hubspot Forms API",
      "required": false
    },
    "HUBSPOT_FOOTER_FORM_GUID": {
      "description": "Form guid over hub spot for footer block.",
      "required": false
    },
    "HUBSPOT_ID_PREFIX": {
      "description": "Hub spot id prefix.",
      "required": false
    },
    "HUBSPOT_LINE_RESYNC_FREQUENCY": {
      "description": "How often in seconds to check for hubspot errors",
      "required": false
    },
    "HUBSPOT_NEW_COURSES_FORM_GUID": {
      "description": "Form guid over hub spot for new courses email subscription form.",
      "required": false
    },
    "HUBSPOT_PORTAL_ID": {
      "description": "Hub spot portal id.",
      "required": false
    },
    "JOBMA_ACCESS_TOKEN": {
      "description": "The JOBMA access token used to access their REST API",
      "required": false
    },
    "JOBMA_BASE_URL": {
      "description": "The base URL for accessing Jobma",
      "required": false
    },
    "JOBMA_LINK_EXPIRATION_DAYS": {
      "description": "The number of days for jobma links to expire",
      "required": false
    },
    "JOBMA_WEBHOOK_ACCESS_TOKEN": {
      "description": "The Jobma access token used by us to verify that a postback came from Jobma",
      "required": false
    },
    "MAILGUN_BATCH_CHUNK_SIZE": {
      "description": "Maximum number of emails to send in a batch",
      "required": false
    },
    "MAILGUN_BCC_TO_EMAIL": {
      "description": "Email which gets BCC'd on outgoing email",
      "required": false
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from",
      "required": false
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API",
      "required": true
    },
    "MAILGUN_SENDER_DOMAIN": {
      "description": "The domain to send mailgun email through",
      "required": true
    },
    "MAILGUN_URL": {
      "description": "The API url for mailfun",
      "required": false
    },
    "MEDIA_ROOT": {
      "description": "Django MEDIA_ROOT setting",
      "required": false
    },
    "MIDDLEWARE_FEATURE_FLAG_COOKIE_MAX_AGE_SECONDS": {
      "description": "Maximum age for feature flag cookies",
      "required": false
    },
    "MIDDLEWARE_FEATURE_FLAG_COOKIE_NAME": {
      "description": "Feature flag cookiename",
      "required": false
    },
    "NEW_RELIC_APP_NAME": {
      "default": "Bootcamp e-commerce",
      "description": "Application identifier in New Relic."
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "5"
    },
    "RECAPTCHA_SECRET_KEY": {
      "description": "The ReCaptcha secret key",
      "required": false
    },
    "RECAPTCHA_SITE_KEY": {
      "description": "The ReCaptcha site key",
      "required": false
    },
    "REDISCLOUD_URL": {
      "description": "RedisCloud connection url",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret",
      "required": false
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry",
      "required": false
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "SITE_NAME": {
      "description": "The site name for the app",
      "required": false
    },
    "SL_TRACKING_ID": {
      "description": "The SL tracking ID",
      "required": false
    },
    "STATUS_TOKEN": {
      "description": "Token to access the status API.",
      "required": true
    },
    "USE_X_FORWARDED_HOST": {
      "description": "Set HOST header to original domain accessed by user",
      "required": false
    },
    "ZENDESK_HELP_WIDGET_ENABLED": {
      "description": null,
      "required": false
    },
    "ZENDESK_HELP_WIDGET_KEY": {
      "description": null,
      "required": false
    }
  }
}
